Starting date & time- 02-Jun-2025 16:09 hours.

I. Introduction to Django- Part 1:

1. What is DJango?
- Django is a python-based web framework.
- It is open-source.

2. What is a Framework?
- Framework is a pre-built architecture.
- In terms of Web Framework, the project comes with a pre-built architecture: like a detailed and well-structured project architecture, specific directories for specific operations or functionalities.
- Comes with its own pre-built functionalities like: user authentication, data encryption, routing, etc.

3. What are Libraries?
- Libraries are pre-written code.
- Used to perform specific operations or to assist in performing the specified function.

4. DJango data encryption method:
- Django uses PBKDF2 (Password-Based Key Derivation Function 2) for password hashing.
- It is a key stretching algorithm that applies a hash function to the password along with a salt.

5. Whay use DJango?
- Django comes with a built-in admin interface, which makes it easy to manage application data.
- It has a robust ORM (Object-Relational Mapping) system that allows developers to interact with databases using Python code instead of SQL.
- Django has a strong community and extensive documentation, making it easier for developers to find help and resources.
- It follows the "Don't Repeat Yourself" (DRY) principle, promoting reusability of code and reducing redundancy.
- Django uses DRY (Don't Repeat Yourself) principle, which means it encourages the reuse of code and reduces redundancy.
- Highly scalable and can handle high traffic loads efficiently.
- Used by- Instagram, Pinterest, Spotify, and many other popular websites.

II. Introduction to Django- Part 2:

6. Current version of DJango:
- The LTS (Long Term Support) version of Django is 5.2.3.

7. What is Virtual Environment?
- A virtual environment is an isolated environment in which you can install packages and dependencies without affecting the global Python installation.
- It allows you to create a separate environment for each project, ensuring that dependencies do not conflict with each other.

8. Global vs Virtual Environment scope:
- Global scope refers to the system-wide Python installation where packages are installed globally and can be accessed by any project.
- Virtual environment scope is limited to the specific project, allowing you to manage dependencies independently without affecting other projects or the global Python installation.

9. What is pip?
- Pip is a package manager for Python that allows you to install and manage Python packages and libraries.
- It is used to install packages from the Python Package Index (PyPI) and other repositories.

10. What is pip freeze?
- Pip freeze is a command that generates a list of all installed Python packages in the current environment along with their versions.
- It outputs the list in a format that can be used to recreate the environment later, typically saved in a requirements.txt file.

11. Installing Virtual Environment on Ubuntu:
- To install the virtual environment package, use the command:

  sudo apt install python3-venv
- This command installs the `venv` module, which is used to create virtual environments in Python 3.

12. Creating a Virtual Environment:
- To create a virtual environment, navigate to your project directory and run the command: 

  python3 -m venv <env_name>

- Replace `<env_name>` with the desired name for your virtual environment.

- Explanation of the command:
  - `python3` specifies the Python version to use.
  - `-m` flag tells Python to run module.
  - `venv` indicates that you want to run the `venv` module to create a virtual environment.
  - `<env_name>` is the placeholder for the name you want to give your virtual environment.

13. Activating a Virtual Environment:
- To activate the virtual environment, use the command:

  source <env_name>/bin/activate

- After activation, your terminal prompt will change to indicate that you are now working within the virtual environment.

14. Deactivating a Virtual Environment:
- To deactivate the virtual environment and return to the global Python environment, simply run the command:

  deactivate

- This will restore your terminal prompt to its original state, indicating that you are no longer in the virtual environment.

15. Installing Django in a Virtual Environment:
- After activating the virtual environment, you can install Django using pip.
- Upgrade pip to the latest version first by running(Optional but recommended):

  pip install --upgrade pip

- To install Django within the activated virtual environment, use the command:

  pip install django

- This command will install the latest version of Django available on PyPI (Python Package Index) within the virtual environment.

- To verify the installation, you can check the installed Django version by running:

  python -m django --version

  OR 

  django-admin --version
  
  OR 

  pip freeze | grep Django

- This will display the version of Django that has been installed in your virtual environment.